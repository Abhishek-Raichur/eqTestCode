pipeline {
    agent any

    stages {
        stage('Checkout SCM') {
            steps {
                // Ensure the workspace is populated from the configured SCM
                checkout scm
            }
        }
        stage('Create and activate a virtual environment'){
            steps {
                // Use Docker CLI to provide Python if the declarative docker agent isn't available
                sh '''
                   # Create venv inside an ephemeral python container and mount the workspace
                   # Use the current UID/GID so files are created with correct ownership
                   docker run --rm -u $(id -u):$(id -g) -v "$PWD":/workspace -w /workspace python:3.11-slim \
                     bash -lc "python3 -m venv venv && ./venv/bin/pip install -r requirements.txt || true"
                '''
            }
        }
        stage('Hello') {
            steps {
                echo 'Hello Worlds'
            }
        }
    }
}