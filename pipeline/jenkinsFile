pipeline {
    agent any

    stages {
        stage('Checkout SCM') {
            steps {
                // Ensure the workspace is populated from the configured SCM
                checkout scm
            }
        }
        stage('Create and activate a virtual environment'){
            steps {
                sh '''
                   python3 -m venv venv
                   . venv/bin/activate
                   venv/bin/pip install -r requirements.txt
                '''
            }
        }
        stage('Run Application') {
            steps {
                                // Try to run the Flask app using the venv if present, else python3, else docker
                sh '''
                    python3 -m venv venv
                   . venv/bin/activate
                    export FLASK_APP=${WORKSPACE}/app.py
                    python3 -m flask run --port 8080 &
                    echo $! > .app_pid
                    echo "Flask started with PID $(cat .app_pid)"
                '''
            }
        }
        stage('Test'){
            steps {
                sh '''
                    python3 -m venv venv
                    . venv/bin/activate
                    python3 -m pytest -q
                '''
            }
            
        }
    
    }
}